name: CI

on:
  push:
    branches:
      - master
  pull_request:
  schedule:
    - cron: '50 4 * * *'
    
env:
  rust_nightly_toolchain: nightly

jobs:
  compile:
    name: Compile
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target:
         # - riscv32imc-esp-espidf
          - xtensa-esp32s3-espidf

    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v3

      # fixes missing libclang error
      - name: Setup | libncurses5
        run: sudo apt-get install libncurses5

      - name: Setup | Rust
        uses: actions-rs/toolchain@v1
        with:
          default: true
          toolchain: ${{ env.rust_nightly_toolchain }}
          components: rustfmt, clippy
        if: matrix.target == 'riscv32imc-esp-espidf'

      - name: Setup | Std
        run: rustup component add rust-src --toolchain ${{ env.rust_nightly_toolchain }}-x86_64-unknown-linux-gnu
        if: matrix.target == 'riscv32imc-esp-espidf'

      - name: Install Rust for Xtensa
        uses: esp-rs/xtensa-toolchain@v1.4
        with:
          default: true
          version: "1.65.0"
          ldproxy: true
        if: matrix.target != 'riscv32imc-esp-espidf'

      - name: Build | Fmt Check
        run: cargo fmt -- --check
      

      - name: Build | Compile 
        run: export ESP_IDF_VERSION=release/v4.4; export ESP_IDF_SDKCONFIG_DEFAULTS=$(pwd)/.github/configs/sdkconfig.defaults; cargo build --target ${{ matrix.target }} -Zbuild-std=std,panic_abort -Zbuild-std-features=panic_immediate_abort

      - name: Setup | ldproxy
        uses: actions-rs/install@v0.1
        with:
          crate: ldproxy
          version: latest
        if: matrix.target == 'riscv32imc-esp-espidf'
